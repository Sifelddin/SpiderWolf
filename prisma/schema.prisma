// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Game {
  id               String    @id @default(uuid())
  developer        String?   @db.VarChar(100)
  editor           String?   @db.VarChar(100)
  releaseDate      DateTime  @db.Date
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  genre            String    @db.VarChar(255)
  link             String    @db.VarChar(255)
  shortDescription String    @db.TinyText
  description      String?   @db.Text
  highlighted      Boolean?  @default(false)
  category         Category  @relation(fields: [categoryId], references: [id])
  categoryId       String
  Videos           Video[]
  Images           Image[]
  Products         Product[]
}

model Video {
  id        String   @id @default(uuid())
  link      String
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        String   @id @default(uuid())
  alt       String?
  title     String?
  source    String
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Category {
  id   String @id @default(uuid())
  name String
  Game Game[]
}

model User {
  id        String   @id @default(uuid())
  firstname String
  lastname  String
  pseudo    String?
  email     String   @unique @db.VarChar(255)
  emailVerified DateTime?
  password  String   @db.VarChar(255)
  salt      String?  @db.VarChar(255)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?  
  id_token           String?  @db.Text
  session_state      String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
// model payMethod {
//   cardNumber String @id
//   dateExpiration String 
//   payPalAccount String

// }

enum Role {
  USER
  ADMIN
}

enum ProductCategory {
  TEST
}

model Order {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  totalPrice   Decimal        @db.Decimal(8, 6)
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  OrderDetails OrderDetails[]
}

model OrderDetails {
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  orderId   String
  productId String
  quantity  Int     @db.SmallInt
  price     Decimal @db.Decimal(8, 6)

  @@id([orderId, productId])
}

model Product {
  id           String           @id @default(uuid())
  name         String           @unique
  label        String           @unique
  price        Decimal          @db.Decimal(8, 6)
  description  String           @db.Text
  onSale       Boolean          @default(false)
  picture      Image[]
  category     ProductCategory?
  Game         Game             @relation(fields: [gameId], references: [id])
  gameId       String
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  OrderDetails OrderDetails[]
}
